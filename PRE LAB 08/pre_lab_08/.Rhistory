baltco_911_calls <- read.csv("~/Documents/GitHub/StevenJacobs772/PRE LAB 08/pre_lab_08/data/baltco_911_calls.csv")
View(baltco_911_calls)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
baltco_911_calls <- read_csv("data/baltco_911_calls.csv")
baltco_911_calls_by_month <- baltco_911_calls |>
mutate(month = month(date, label=TRUE)) |>
group_by(month) |>
summarize(total_calls = n()) |>
arrange(desc(total_calls))
baltco_911_calls_by_month
baltco_911_calls_by_month |>
ggplot()
baltco_911_calls_by_month |>
ggplot()
baltco_911_calls_by_month |>
ggplot() +
geom_bar(aes(x=month, weight=total_calls))
baltco_911_calls_by_month |>
ggplot() +
geom_bar(aes(x=reorder(month,total_calls), weight=total_calls))
baltco_911_calls_by_month |>
ggplot() +
geom_bar(aes(x=reorder(month,total_calls), weight=total_calls)) +
coord_flip()
baltco_911_calls_by_month |>
ggplot() +
geom_bar(aes(x=reorder(month,total_calls), weight=total_calls)) +
coord_flip() +
theme_minimal()
install.packages('ggthemes')
library(ggthemes)
baltco_911_calls_by_month |>
ggplot() +
geom_bar(aes(x=reorder(month,total_calls), weight=total_calls)) +
coord_flip() +
theme_economist()
baltco_911_calls_by_month |>
ggplot() +
geom_bar(aes(x=reorder(month,total_calls), weight=total_calls)) +
coord_flip() +
theme_economist() +
labs(
title="More 911 Overdose Calls in Warmer Months",
x = "month",
y = "total calls",
caption = "source: Baltimore County"
)
baltco_911_calls_by_date <- baltco_911_calls |>
group_by(date) |>
summarise(
total_calls=n()
)
baltco_911_calls_by_date
baltco_911_calls_by_date |>
ggplot() +
geom_line(aes(x=date, y=total_calls))
baltco_911_calls_by_date |>
ggplot() +
geom_line(aes(x=date, y=total_calls)) +
scale_x_date(date_breaks = "1 week", date_labels = "%b %d")
baltco_911_calls_by_date |>
ggplot() +
geom_line(aes(x=date, y=total_calls)) +
scale_x_date(date_breaks = "1 week", date_labels = "%b %d") +
theme(
axis.text.x = element_text(angle = 45,  hjust=1)
)
prince_georges_2022_overdoses <- read.csv("~/Documents/GitHub/StevenJacobs772/LAB 08/lab_08/data/prince_georges_2022_overdoses.csv")
View(prince_georges_2022_overdoses)
knitr::opts_chunk$set(echo = TRUE)
install.packages('ggthemes')
library(ggthemes)
library(tidyverse)
library(lubridate)
install.packages("ggthemes")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
install.packages('ggthemes')
library(ggthemes)
library(tidyverse)
library(lubridate)
prince_georges_2022_overdoses <- read_csv("data/prince_georges_2022_overdoses.csv")
prince_georges_2022_overdoses <- read_csv("data/prince_georges_2022_overdoses.csv")
prince_georges_2022_overdoses
#create column for the date
# Load the lubridate package if you haven't already
library(lubridate)
# Assuming your_data is the name of your data frame and datetime is the column name
prince_georges_2022_overdoses$date_of_call <- as.Date(prince_georges_2022_overdoses$datetime)
# View the updated data frame
head(prince_georges_2022_overdoses)
#create column for the date
# Load the lubridate package if you haven't already
library(lubridate)
# Assuming your_data is the name of your data frame and datetime is the column name
prince_georges_2022_overdoses$date_of_call <- as.Date(prince_georges_2022_overdoses$datetime)
#
prince_georges_2022_overdoses <- prince_georges_2022_overdoses |>
mutate(week_of_year = isoweek(date_of_call))
#
prince_georges_2022_overdoses <- prince_georges_2022_overdoses %>%
mutate(month_of_call = month(date_of_call, label = TRUE))
# View the updated data frame
head(prince_georges_2022_overdoses)
dc.wikia.data <- read.csv("~/Documents/GitHub/StevenJacobs772/ReverseEngineeringProject/ComicData/data/dc-wikia-data.csv")
View(dc.wikia.data)
marvel.wikia.data <- read.csv("~/Documents/GitHub/StevenJacobs772/ReverseEngineeringProject/ComicData/data/marvel-wikia-data.csv")
View(marvel.wikia.data)
load("~/Documents/GitHub/StevenJacobs772/ReverseEngineeringProject/ComicData/data/DC 2014 Women In Comics Stats.csv")
DC.2014.Women.In.Comics.Stats <- read.csv("~/Documents/GitHub/StevenJacobs772/ReverseEngineeringProject/ComicData/data/DC 2014 Women In Comics Stats.csv")
View(DC.2014.Women.In.Comics.Stats)
MARVEL.2014.Women.In.Comics.Stats <- read.csv("~/Documents/GitHub/StevenJacobs772/ReverseEngineeringProject/ComicData/data/MARVEL 2014 Women In Comics Stats.csv")
View(MARVEL.2014.Women.In.Comics.Stats)
MONTH.DC.Women.In.Comics.2014 <- read.csv("~/Documents/GitHub/StevenJacobs772/ReverseEngineeringProject/ComicData/data/MONTH DC Women In Comics 2014.csv")
View(MONTH.DC.Women.In.Comics.2014)
MONTH.MARVEL.Women.In.Comics.2014 <- read.csv("~/Documents/GitHub/StevenJacobs772/ReverseEngineeringProject/ComicData/data/MONTH MARVEL Women In Comics 2014.csv")
View(MONTH.MARVEL.Women.In.Comics.2014)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(janitor)
library(readr)
library(refinr)
# Load required data
# Path to data should be loaded from folder "data" i.e. read_csv("data/name_of_data.csv")
dc_data <- read_csv("data/dc-wikia-data.csv")
marvel_data <- read_csv("data/marvel-wikia-data.csv")
dc_womenincomics2014_comparedto2013 <- read_csv("data/DC 2014 Women In Comics Stats.csv")
marvel_womenincomics2014_comparedto2013 <- read_csv("data/MARVEL 2014 Women In Comics Stats.csv")
dc_womenincomics2014_month <- read_csv("data/MONTH DC Women In Comics 2014.csv")
marvel_womenincomics2014_month <- read_csv("data/MONTH MARVEL Women In Comics 2014.csv")
# Clean required data and prepare for analysis if needed.
clean_dc <- clean_names(dc_data)
clean_marvel <- clean_names(marvel_data)
# Put code to reverse engineer sentence here
#DC code
dc_gender <- clean_dc |>
filter(!is.na(sex), appearances >= 1) |>
group_by(sex) |>
summarise(
count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
#Marvel code
marvel_gender <- clean_marvel |>
filter(!is.na(sex), appearances >= 1) |>
group_by(sex) |>
summarise(
count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
view(dc_gender)
view(marvel_gender)
# Put code to reverse engineer sentence here
#DC code
dc_LGBT <- clean_dc |>
filter(!is.na(gsm))
dc_girls_gays_and_theys <- dc_LGBT |>
group_by(year) |>
summarise(
count_year=n()
)
# Marvel code
marvel_LGBT <- clean_marvel |>
filter(!is.na(gsm))
marvel_girls_gays_and_theys <- marvel_LGBT |>
group_by(year) |>
summarise(
count_year=n()
)
view(dc_girls_gays_and_theys)
view(marvel_girls_gays_and_theys)
# Put code to reverse engineer sentence here
#Who are the people with no ID?
no_id <- clean_dc |>
filter(is.na(id))
no_id
# They are more side characters than heroes. We can likely exclude them from the code to get to the author's main findings
# Here we're looking for the secret identity split up in DC Comics
dc_secret_identity <- clean_dc |>
filter(!is.na(sex),
(!is.na(id))) |>
group_by(sex, id) |>
summarise(count=n()) |>
mutate(percentage = (count/sum(count)*100)) |>
arrange(desc(count))
# Now for Marvel
marvel_secret_identity <- clean_marvel |>
filter(!is.na(id),
(!is.na(id))) |>
group_by(sex, id) |>
summarise(count=n()) |>
mutate(percentage = (count/sum(count)*100)) |>
arrange(desc(count))
clean_marvel |>
group_by(id) |>
summarise(count = n())
#count it w/o known to authorities, with public, with secret identity
view(dc_secret_identity)
view(marvel_secret_identity)
view(dc_secret_identity)
# Put code to reverse engineer sentence here
#DC code
DC_10_appearances <- clean_dc |>
filter(!is.na(sex), appearances >= 10) |>
group_by(sex) |>
summarise(count = n()) |>
mutate(percentage = (count/sum(count)*100)) |>
arrange(desc(count))
#Marvel code
marvel_10_appearances <- clean_marvel |>
filter(!is.na(sex), appearances >= 10) |>
group_by(sex) |>
summarise(count = n()) |>
mutate(percentage = (count/sum(count)*100)) |>
arrange(desc(count))
DC_10_appearances
marvel_10_appearances
# Put code to reverse engineer sentence here
#DC alignment code
dc_alignment <- clean_dc |>
filter(appearances >= 1) |>
group_by(sex, align) |>
filter(!is.na(sex) & !is.na(align)) |>
summarise(
count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
#Marvel alignment code
marvel_alignment <- clean_marvel |>
filter(appearances >= 1) |>
group_by(sex, align) |>
filter(!is.na(sex) & !is.na(align)) |>
summarise(
count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
dc_alignment
marvel_alignment
# Put code to reverse engineer sentence here
#DC alignment code
dc_alignment <- clean_dc |>
filter(appearances >= 1) |>
group_by(sex, align) |>
filter(!is.na(sex) & !is.na(align)) |>
summarise(
count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
#Marvel alignment code
marvel_alignment <- clean_marvel |>
filter(appearances >= 1) |>
group_by(sex, align) |>
filter(!is.na(sex) & !is.na(align)) |>
summarise(
count=n()) |>
arrange(desc(count)) |>
mutate(percentage = (count/sum(count)*100))
marvel_secret_identity_no_known_authorities_etc <- clean_marvel |>
filter(!is.na(sex),
!is.na(id),
id != "Known to Authorities",
id != "No Dual Identity",
id != "Public Identity",
id != "Secret Identity",
id != "NA") |>  # Add additional filter conditions as needed
group_by(sex, id) |>
summarise(count=n()) |>
mutate(percentage = (count/sum(count)*100)) |>
arrange(desc(count))
view(marvel_secret_identity_no_known_authorities_etc)
marvel_secret_identity_without_known_authorities <- clean_marvel |>
filter(!is.na(sex),
!is.na(id),
id != "known to authorities") |>  # Exclude rows with the title "known to authorities"
group_by(sex, id) |>
summarise(count=n()) |>
mutate(percentage = (count/sum(count)*100)) |>
arrange(desc(count))
view(marvel_secret_identity_without_known_authorities)
marvel_secret_identity_without_known_authorities <- clean_marvel |>
filter(!is.na(sex),
!is.na(id),
id != "Known To Authorities Identity") |>  # Exclude rows with the title "known to authorities"
group_by(sex, id) |>
summarise(count=n()) |>
mutate(percentage = (count/sum(count)*100)) |>
arrange(desc(count))
view(marvel_secret_identity_without_known_authorities)
